---
alwaysApply: false
---

# –ü—Ä–∞–≤–∏–ª–∞ –Ω–∞–ø–∏—Å–∞–Ω–∏—è Unit —Ç–µ—Å—Ç–æ–≤

## üõ†Ô∏è –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

- **Jest/Vitest** - –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—Ä–µ–π–º–≤–æ—Ä–∫ –¥–ª—è unit —Ç–µ—Å—Ç–æ–≤
- **React Testing Library** - –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
- **MSW (Mock Service Worker)** - –¥–ª—è –º–æ–∫–∏—Ä–æ–≤–∞–Ω–∏—è API –∑–∞–ø—Ä–æ—Å–æ–≤
- **@faker-js/faker** - –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö

## üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∏ –∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤

- –†–∞–∑–º–µ—â–∞–π—Ç–µ —Ç–µ—Å—Ç—ã —Ä—è–¥–æ–º —Å —Ç–µ—Å—Ç–∏—Ä—É–µ–º—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏: `Component.test.tsx`
- –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–∞–ø–∫—É `__tests__`: `__tests__/Component.test.tsx`
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è `.test.{ts,tsx}` –∏–ª–∏ `.spec.{ts,tsx}`

## üéØ –ß—Ç–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å

### React –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã

```typescript
// components/Button/Button.test.tsx
import { render, screen, fireEvent } from '@testing-library/react';
import { Button } from './Button';

describe('Button', () => {
  it('–¥–æ–ª–∂–µ–Ω –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏', () => {
    render(<Button>–ù–∞–∂–º–∏ –º–µ–Ω—è</Button>);
    expect(screen.getByRole('button', { name: '–ù–∞–∂–º–∏ –º–µ–Ω—è' })).toBeInTheDocument();
  });

  it('–¥–æ–ª–∂–µ–Ω –≤—ã–∑—ã–≤–∞—Ç—å onClick –ø—Ä–∏ –∫–ª–∏–∫–µ', () => {
    const handleClick = jest.fn();
    render(<Button onClick={handleClick}>–ö–Ω–æ–ø–∫–∞</Button>);

    fireEvent.click(screen.getByRole('button'));
    expect(handleClick).toHaveBeenCalledTimes(1);
  });
});
```

### –•—É–∫–∏

```typescript
// hooks/use-auth.test.ts
import { renderHook, act } from "@testing-library/react";
import { useAuth } from "./use-auth";

describe("useAuth", () => {
  it("–¥–æ–ª–∂–µ–Ω –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ", () => {
    const { result } = renderHook(() => useAuth());

    expect(result.current.user).toBeNull();
    expect(result.current.isLoading).toBe(false);
  });
});
```

### –°–µ—Ä–≤–∏—Å—ã –∏ —É—Ç–∏–ª–∏—Ç—ã

```typescript
// services/auth.test.ts
import { authService } from "./auth";

describe("authService", () => {
  it("–¥–æ–ª–∂–µ–Ω —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å email –≤ lowercase", () => {
    const result = authService.normalizeEmail("USER@EXAMPLE.COM");
    expect(result).toBe("user@example.com");
  });
});
```

## üß™ –ü—Ä–∞–≤–∏–ª–∞ –Ω–∞–ø–∏—Å–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤

### 1. –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–µ—Å—Ç–æ–≤

```typescript
describe("ComponentName", () => {
  // –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
  describe("when user is authenticated", () => {
    beforeEach(() => {
      // –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–ª—è –≥—Ä—É–ø–ø—ã —Ç–µ—Å—Ç–æ–≤
    });

    it("–¥–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", () => {
      // –¢–µ—Å—Ç
    });
  });
});
```

### 2. –ò–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤

- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `describe` –¥–ª—è –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∏
- –¢–µ—Å—Ç—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å "–¥–æ–ª–∂–µ–Ω"
- –û–ø–∏—Å—ã–≤–∞–π—Ç–µ –æ–∂–∏–¥–∞–µ–º–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ, –∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é

### 3. –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ

```typescript
import { faker } from "@faker-js/faker";

const mockUser = {
  id: faker.string.uuid(),
  email: faker.internet.email({ provider: "example.com" }),
  firstName: faker.person.firstName(),
  lastName: faker.person.lastName(),
};
```

### 4. –ú–æ–∫–∏—Ä–æ–≤–∞–Ω–∏–µ

```typescript
// –ú–æ–∫–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª–µ–π
jest.mock("../services/api", () => ({
  apiService: {
    getUser: jest.fn(),
    updateUser: jest.fn(),
  },
}));

// –ú–æ–∫–∏—Ä–æ–≤–∞–Ω–∏–µ Next.js router
jest.mock("next/navigation", () => ({
  useRouter: () => ({
    push: jest.fn(),
    replace: jest.fn(),
  }),
}));
```

### 5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ä–º

```typescript
import { screen, fireEvent, waitFor } from '@testing-library/react';
import userEvent from '@testing-library/user-event';

it('–¥–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –æ—à–∏–±–∫—É –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–ª—è email', async () => {
  const user = userEvent.setup();
  render(<SignInForm />);

  const emailInput = screen.getByLabelText(/email/i);
  await user.type(emailInput, 'invalid-email');
  await user.tab(); // –ü–æ—Ç–µ—Ä—è —Ñ–æ–∫—É—Å–∞

  await waitFor(() => {
    expect(screen.getByText(/–Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç email/i)).toBeInTheDocument();
  });
});
```

### 6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π

```typescript
it('–¥–æ–ª–∂–µ–Ω –∑–∞–≥—Ä—É–∂–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', async () => {
  const mockUser = { id: '1', name: 'John' };
  apiService.getUser.mockResolvedValue(mockUser);

  render(<UserProfile userId="1" />);

  await waitFor(() => {
    expect(screen.getByText('John')).toBeInTheDocument();
  });

  expect(apiService.getUser).toHaveBeenCalledWith('1');
});
```

## üé® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —Å –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞–º–∏

```typescript
// test-utils/render-with-providers.tsx
import { QueryClient, QueryClientProvider } from '@tanstack/react-query';
import { AuthProvider } from '../services/auth/auth-provider';

export function renderWithProviders(ui: React.ReactElement) {
  const queryClient = new QueryClient({
    defaultOptions: { queries: { retry: false } },
  });

  return render(
    <QueryClientProvider client={queryClient}>
      <AuthProvider>
        {ui}
      </AuthProvider>
    </QueryClientProvider>
  );
}
```

## ‚úÖ –ß—Ç–æ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å

1. **–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞** - –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è, –≤–∞–ª–∏–¥–∞—Ü–∏—è, –≤—ã—á–∏—Å–ª–µ–Ω–∏—è
2. **–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è** - –∫–ª–∏–∫–∏, –≤–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö, –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º
3. **–£—Å–ª–æ–≤–Ω–∞—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∞** - –ø–æ–∫–∞–∑/—Å–∫—Ä—ã—Ç–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
4. **–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫** - —Å–µ—Ç–µ–≤—ã–µ –æ—à–∏–±–∫–∏, –≤–∞–ª–∏–¥–∞—Ü–∏—è
5. **–•—É–∫–∏ –∏ —É—Ç–∏–ª–∏—Ç—ã** - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Ö—É–∫–∏, helper —Ñ—É–Ω–∫—Ü–∏–∏

## üö´ –ß—Ç–æ –ù–ï —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å

1. **–í–Ω–µ—à–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏** - Material-UI, React Query (—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é)
2. **–¢—Ä–∏–≤–∏–∞–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã** - –ø—Ä–æ—Å—Ç—ã–µ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–æ–Ω–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
3. **–†–µ–∞–ª–∏–∑–∞—Ü–∏—é** - —Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ, –∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—é

## üìä –ü–æ–∫—Ä—ã—Ç–∏–µ —Ç–µ—Å—Ç–∞–º–∏

- –°—Ç—Ä–µ–º–∏—Ç–µ—Å—å –∫ 80%+ –ø–æ–∫—Ä—ã—Ç–∏—é –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —á–∞—Å—Ç–µ–π
- –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: —Å–µ—Ä–≤–∏—Å—ã > —Ö—É–∫–∏ > –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã > —É—Ç–∏–ª–∏—Ç—ã
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ `--coverage` –¥–ª—è –æ—Ç—á–µ—Ç–æ–≤ –æ –ø–æ–∫—Ä—ã—Ç–∏–∏

## üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è

```typescript
// jest.setup.ts
import "@testing-library/jest-dom";

// –ú–æ–∫–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
Object.defineProperty(window, "matchMedia", {
  writable: true,
  value: jest.fn().mockImplementation((query) => ({
    matches: false,
    media: query,
    onchange: null,
    addListener: jest.fn(),
    removeListener: jest.fn(),
  })),
});
```

## üí° –õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏

1. **–ò–∑–æ–ª—è—Ü–∏—è —Ç–µ—Å—Ç–æ–≤** - –∫–∞–∂–¥—ã–π —Ç–µ—Å—Ç –Ω–µ–∑–∞–≤–∏—Å–∏–º
2. **–û—á–∏—Å—Ç–∫–∞ –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–æ–≤** - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ `afterEach` –¥–ª—è cleanup
3. **–ß–∏—Ç–∞–µ–º–æ—Å—Ç—å** - —Ç–µ—Å—Ç—ã –∫–∞–∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
4. **–ë—ã—Å—Ç—Ä—ã–µ —Ç–µ—Å—Ç—ã** - –º–∏–Ω–∏–º–∏–∑–∏—Ä—É–π—Ç–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
5. **–°—Ç–∞–±–∏–ª—å–Ω—ã–µ —Ç–µ—Å—Ç—ã** - –∏–∑–±–µ–≥–∞–π—Ç–µ —Ñ–ª–∞–∫–∞—é—â–∏—Ö —Ç–µ—Å—Ç–æ–≤
6. **DRY –ø—Ä–∏–Ω—Ü–∏–ø** - –≤—ã–Ω–æ—Å–∏—Ç–µ –æ–±—â—É—é –ª–æ–≥–∏–∫—É –≤ —Ö–µ–ª–ø–µ—Ä—ã
